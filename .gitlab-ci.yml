stages:
  - Version
  - Build
  - ImageBuild_Push
  - CodeQC_SonarQube

variables:
  BRANCH_NAME: ${CI_COMMIT_BRANCH}
  ENV: ${ENVIRONMENT}
  PROJECT_NAME: ${CI_PROJECT_NAME}
  DOCKER_TLS_CERTDIR: "/certs"
Version-Info:
  stage: Version
  image: maven:3.8.1-jdk-11-openj9
  script:
    - mvn --version
    - java -version
  tags:
    - gitlab-org-docker
Build-App:
  stage: Build
  image: maven:3.8.1-jdk-11-openj9
  tags:
    - gitlab-org-docker
  script:
    - echo "========= Build Started =========="
    - mvn clean package -DskipTest
  artifacts:
    paths:
      - target/spring-security.war
    expire_in: 2 days
    name: sample-web-artifact
    when: on_success

services:
  - docker:19.03.12-dind
code_quality:
  tags:
    - gitlab-org-docker
  stage: ImageBuild_Push
  image: docker:19.03.12
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - echo "========= Buid Started =========="
    - docker build -t ragav94/spring-security .
    - docker push ragav94/spring-security

sonarqube-check:
  image: maven:3.8.1-jdk-11-openj9
  tags:
    - gitlab-org-docker
  stage: CodeQC_SonarQube
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - master # or the name of your main branch






